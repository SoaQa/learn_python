"""
Напишите программу, которая по заданному n выведет все
правильные скобочные последовательности в нужном порядке.

Формат ввода
На вход функция принимает n — целое число от 0 до 10.

Формат вывода
Функция должна напечатать все возможные скобочные последовательности
заданной длины в алфавитном (лексикографическом) порядке.

Ввод
3

Вывод
((()))
(()())
(())()
()(())
()()()
"""


def bracket_generator(n):
    """
    Эта функция использует вспомогательную функцию generate_brackets,
    которая принимает четыре аргумента:
    `s:` текущая последовательность скобок, сгенерированная на данный момент
    `n:` желаемая длина конечной последовательности скобок
    `open_count:` количество открытых скобок, уже имеющихся в
    последовательности
    `close_count:` количество закрывающих скобок, уже имеющихся в
    последовательности.
    """
    def generate_brackets(s, n, open_count, close_count):
        """
        Функция generate_brackets использует рекурсивный подход для генерации
        всех возможных последовательностей скобок. На каждом шаге он проверяет,
        достигла ли текущая последовательность желаемой длины 2n. Если да, то
        он печатает последовательность. Если нет, он добавляет открытую скобку,
        если количество открытых скобок меньше n, и добавляет закрывающую
        скобку, если количество закрытых скобок меньше количества открытых
        скобок.
        """
        if len(s) == 2 * n:
            print(s)
            return
        if open_count < n:
            generate_brackets(s + "(", n, open_count + 1, close_count)
        if close_count < open_count:
            generate_brackets(s + ")", n, open_count, close_count + 1)
        # print(s)

    generate_brackets("", n, 0, 0)


if __name__ == '__main__':
    n = int(input())
    bracket_generator(n)
